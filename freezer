#!/bin/bash
CRIU_LOGLEVEL=${CRIU_LOGLEVEL:-2}
CRIU_SIGNALS=${CRIU_SIGNALS:-HUP INT TERM}
CRIU_EXCLUDES=${CRIU_EXCLUDES:-^/proc/|^/sys/|^/dump/|^/var/log/freezer/}
CRIU_DUMP_OPTIONS="${CRIU_DUMP_OPTIONS:---shell-job}"
CRIU_RESTORE_OPTIONS="${CRIU_RESTORE_OPTIONS:---shell-job}"

# create links for stdout and stderr, they need be used by the app
mkdir -p /var/log/freezer/ \
	&& ln -sf /proc/1/fd/1 /var/log/freezer/stdout \
	&& ln -sf /proc/1/fd/2 /var/log/freezer/stderr
	
freeze() { 
	# temporarily disable signals
	trap "" ${SIGNALS}
	echo "Freezing ${1}" 
	if criu dump ${CRIU_DUMP_OPTIONS} -t "${1}" -v${CRIU_LOGLEVEL} -D /dump
	then
		echo "Archiving changes" 
		find / -newer /var/lock/freezer.lock -type f 2>/dev/null| egrep -v "${CRIU_EXCLUDES}" | xargs tar czf /dump/updates.tar.gz  2>/dev/null 
		touch /dump/frozen
		echo "Checkpoint completed"
		if [ -n "$S3" ]
		then
			echo "Syncing to $S3" 
			aws s3 sync --quiet --delete /dump "$S3"
			touch /dump/uploaded
			aws s3 cp --quiet /dump/uploaded "$S3"
			echo "Done"
		fi
	else
		touch /dump/rotten
		echo "Checkpoint failed"
	fi
	# re-enable signals
	trap - ${SIGNALS}
}


if [ "$1" == "freeze" ]
then
	if [ -f /var/lock/freezer.lock ]
	then 
		kill -s INT 1
	else
		echo "No process to freeze"
	fi
	exit 0
fi

if [ -n "$S3" ]
then
	echo "Trying to load dump from $S3" 
	aws s3 sync --quiet "$S3" /dump
	if [ -f /dump/uploaded ]
	then
		echo "Found valid S3 snapshot"
	else
		echo "No valid S3 snapshot found"
		rm -f /dump/*
	fi
fi
	
if [ "$1" == "start" ]
then
	shift
	if  [ -f /dump/frozen ]
	then
		echo "Found frozen process, starting it instead of '$@'"
		if [ -f /dump/updates.tar.gz ]
		then
			echo "Restoring changed files"
			cd / && tar xvfz /dump/updates.tar.gz
		fi
		exec criu restore ${CRIU_RESTORE_OPTIONS} -v${CRIU_LOGLEVEL} -D /dump
	else
		# start provided comand in background
		if [ $# -gt 0 ]
		then
			echo "Starting '$@'"
			"$@"  &
			pid=$!
			trap "freeze $pid" ${SIGNALS}
			echo "${pid}" > /var/lock/freezer.lock
			echo "'$@' was started"
			wait 2>/dev/null
			echo "Process $pid terminated"
		else
			echo "Please provide a command to start"
		fi
	fi 
else
	exec "$@"
fi

